spring.application.name=crud-application
server.port = 8081
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
# MySQL Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/emp_system
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

custom.message="Hello from Employee Service Config"
# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#jwt secret and token expiration configuration
# 10 minutes - access
# 24 hours - refresh

jwt.secret=yourSecretKeyHere
jwt.access.expiration=900000
jwt.refresh.expiration=86400000

#Health check
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#Circuitbreaker and retry mechanism in client side.
resilience4j.circuitbreaker.instances.notificationService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.notificationService.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.notificationService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.notificationService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.notificationService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.notificationService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.notificationService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.notificationService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.notificationService.slidingWindowType=COUNT_BASED

#resilience4j.retry.instances.notificationService.maxAttempts=3
#resilience4j.retry.instances.notificationService.waitDuration=2s

resilience4j.circuitbreaker.instances.notificationService.recordExceptions=java.lang.Exception,org.springframework.web.reactive.function.client.WebClientRequestException

logging.level.io.github.resilience4j.circuitbreaker=DEBUG
logging.level.org.springframework.web.reactive.function.client=ERROR

#Kafka producer configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.admin.auto-create=true
#Kafka consumer
spring.kafka.consumer.group-id=mygroup-1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.workforce.common.events
spring.kafka.consumer.properties.spring.json.value.default.type=com.workforce.common.events.EmployeeEvent

#Redis server configuration
spring.redis.host=localhost
spring.redis.port=6379

#Optional: set cache expiry time (10 min)
spring.cache.redis.time-to-live=600000