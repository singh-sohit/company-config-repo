spring.application.name=notification
server.port = 8082
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
# MySQL Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/emp_system
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

custom.message="Hello from Notification Service Config"
# Hibernate properties
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Kafka consumer configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=mygroup-1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.workforce.common.events
spring.kafka.consumer.properties.spring.json.value.default.type=com.workforce.common.events.EmployeeEvent
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.notification.model
#spring.kafka.consumer.properties.spring.json.value.default.type=com.notification.model.Employee

#Kafka producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.admin.auto-create=true

#spring.kafka.consumer.properties.spring.json.value.default.type=com.notification.model.EmployeeCreatedEvent
#spring.kafka.consumer.properties.spring.json.value.default.type=com.notification.model.NotificationFailedEvent